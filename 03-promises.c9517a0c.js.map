{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAEA,MAAMC,EAAO,CACTC,KAAMC,SAASC,cAAc,SAC7BC,MAAOF,SAASC,cAAc,kBAC9BE,UAAWH,SAASC,cAAc,iBAClCG,OAAQJ,SAASC,cAAc,mBAC/BI,IAAKL,SAASC,cAAc,oBAKhC,SAASK,EAAcC,EAAUC,GAC/B,MAAMC,EAAgBC,KAAKC,SAAW,GACpC,OAAO,IAAIC,SAAQ,CAACC,EAASC,IAChBL,EACAI,EAAQ,C,SAAEN,E,SAAUC,IAEpBM,EAAO,C,SAAEP,E,SAAUC,K,CARpCV,EAAKO,IAAIU,iBAAiB,SAa1B,SAAsBC,GACpBA,EAAEC,iBACF,IAAIC,EAAW,EACXC,EAAarB,EAAKI,MAAMkB,MAC5B,MAAMC,EAAcvB,EAAKM,OAAOgB,MAC1BE,EAAiBxB,EAAKK,UAAUiB,MAEpC,IAAK,IAAIG,EAAI,EAAGA,GAAKC,OAAOH,GAAcE,GAAK,EAAG,CAChDL,EAAWK,EAEX,IAAIE,EAAWD,OAAOL,GAAcK,OAAOF,GAAkBJ,EAC9DZ,EAAcY,EAAUO,GACpBC,MAAK,EAACnB,SAAEA,EAAQC,SAAEA,MACfmB,YAAW,KACXC,EAAAhC,GAASiC,OAAOC,QAAQ,uBAAqBvB,QAAiBC,MAAa,GAC1EA,EAAS,IAGbuB,OAAM,EAACxB,SAAEA,EAAQC,SAAEA,MAChBmB,YAAW,KACXC,EAAAhC,GAASiC,OAAOG,QAAQ,sBAAoBzB,QAAeC,MAAa,GACvEA,EAAS,G","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst refs = {\n    form: document.querySelector('.form'),\n    delay: document.querySelector('[name=\"delay\"]'),\n    delayStep: document.querySelector('[name=\"step\"]'),\n    amount: document.querySelector('[name=\"amount\"]'),\n    btn: document.querySelector('[type=\"submit\"]'),\n}\n//\nrefs.btn.addEventListener('click', startPromise);\n\nfunction createPromise(position, delayAll) {\n  const shouldResolve = Math.random() > 0.3;\n    return new Promise((resolve, reject) => {\n             if (shouldResolve) {\n          return resolve({ position, delayAll });\n        } else {\n          return reject({ position, delayAll });\n        }\n  })\n};\n\nfunction startPromise(e) {\n  e.preventDefault();\n  let position = 0;\n  let delayInput = refs.delay.value;\n  const amountInput = refs.amount.value;\n  const delayStepInput = refs.delayStep.value;\n \n    for (let i = 1; i <= Number(amountInput); i += 1) {\n      position = i;\n      \n      let delayAll = Number(delayInput) + Number(delayStepInput) * position;\n     createPromise(position, delayAll)\n        .then(({ position, delayAll }) => {\n            setTimeout(() => {\n            Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delayAll}ms`);\n          }, delayAll);\n        })\n    \n        .catch(({ position, delayAll }) => {\n            setTimeout(() => {\n            Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delayAll}ms`);\n          }, delayAll);\n        });\n    }\n};"],"names":["$eWCmQ","parcelRequire","$47d4ff9957288465$var$refs","form","document","querySelector","delay","delayStep","amount","btn","$47d4ff9957288465$var$createPromise","position","delayAll","shouldResolve","Math","random","Promise","resolve","reject","addEventListener","e","preventDefault","position1","delayInput","value","amountInput","delayStepInput","i","Number","delayAll1","then","setTimeout","$parcel$interopDefault","Notify","success","catch","failure"],"version":3,"file":"03-promises.c9517a0c.js.map"}